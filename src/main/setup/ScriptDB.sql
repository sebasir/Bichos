CREATE TYPE STATUS_ENUM AS ENUM ('Activo', 'Deshabilitado', 'Bloqueado', 'Incompleto', 'Completo');
CREATE TYPE AUDIT_ENUM AS ENUM ('LOGIN', 'LOGOUT', 'TIMEOUT', 'INSERT', 'UPDATE', 'DELETE', 'STATUS_CHANGE');

CREATE TABLE INSTITUTION (
	ID_INSTITUTION SERIAL NOT NULL PRIMARY KEY CHECK (ID_INSTITUTION > 0),
	INSTITUTION_NAME VARCHAR(64) NOT NULL,
	INSTITUTION_CODE VARCHAR(32) NOT NULL
);

CREATE TABLE COLLECTION (
	ID_COLLECTION SERIAL NOT NULL PRIMARY KEY CHECK (ID_COLLECTION > 0),
	COLLECTION_NAME VARCHAR(64) NOT NULL,
	ID_INSTITUTION INT REFERENCES INSTITUTION (ID_INSTITUTION)
);

CREATE TABLE CATALOG (
	ID_CATALOG SERIAL NOT NULL PRIMARY KEY CHECK (ID_CATALOG > 0),
	CATALOG_NAME VARCHAR(64) NOT NULL,
	ID_COLLECTION INT REFERENCES COLLECTION (ID_COLLECTION),
	UNIQUE(ID_COLLECTION, CATALOG_NAME)
);

CREATE TABLE SAMPLE_TYPE (
	ID_SATY SERIAL NOT NULL PRIMARY KEY CHECK(ID_SATY > 0),
	SATY_NAME VARCHAR(32) NOT NULL
);

CREATE TABLE REG_TYPE (
	ID_RETY SERIAL NOT NULL PRIMARY KEY CHECK(ID_RETY > 0),
	RETY_NAME VARCHAR(32) NOT NULL
);

CREATE TABLE AUTHOR (
	ID_AUTHOR SERIAL NOT NULL PRIMARY KEY CHECK(ID_AUTHOR > 0),
	AUTHOR_NAME VARCHAR(32) NOT NULL,
        ID_USER INT
);

CREATE TABLE AUTHOR_TYPE (
	ID_AUTY SERIAL NOT NULL PRIMARY KEY CHECK(ID_AUTY > 0),
	AUTY_NAME VARCHAR(32) NOT NULL
);

CREATE TABLE AUTHOR_ROLE (
	ID_AURO SERIAL NOT NULL PRIMARY KEY CHECK(ID_AURO > 0),
	ID_AUTHOR INT REFERENCES AUTHOR (ID_AUTHOR),
	ID_AUTY INT REFERENCES AUTHOR_TYPE (ID_AUTY),
	UNIQUE (ID_AURO, ID_AUTY)
);

CREATE TABLE LOCATION_LEVEL (
	ID_LOCLEVEL SERIAL NOT NULL PRIMARY KEY CHECK(ID_LOCLEVEL > 0),
	LOCLEVEL_NAME VARCHAR(32) NOT NULL,
	LOCLEVEL_RANK INTEGER NOT NULL
);

CREATE TABLE LOCATION (
	ID_LOCATION SERIAL NOT NULL PRIMARY KEY CHECK(ID_LOCATION > 0),
	LOCATION_NAME VARCHAR(64) NOT NULL,
	LATITUDE FLOAT,
	LONGITUDE FLOAT,
	ALTITUDE FLOAT,
	RADIO FLOAT DEFAULT 0,
	ID_LOCLEVEL INT REFERENCES LOCATION_LEVEL (ID_LOCLEVEL),
	ID_CONTAINER INT REFERENCES LOCATION (ID_LOCATION)
);

CREATE TABLE TAXONOMY_LEVEL (
	ID_TAXLEVEL SERIAL NOT NULL PRIMARY KEY CHECK(ID_TAXLEVEL > 0),
	TAXLEVEL_NAME VARCHAR(32) NOT NULL,
	TAXLEVEL_RANK INTEGER NOT NULL
);

CREATE TABLE TAXONOMY (
	ID_TAXONOMY SERIAL NOT NULL PRIMARY KEY CHECK(ID_TAXONOMY > 0),
	TAXONOMY_NAME VARCHAR(64) NOT NULL,
	ID_TAXLEVEL INT REFERENCES TAXONOMY_LEVEL (ID_TAXLEVEL),
	ID_CONTAINER INT REFERENCES TAXONOMY (ID_TAXONOMY)
);

CREATE TABLE SPECIMEN (
	ID_SPECIMEN SERIAL NOT NULL PRIMARY KEY CHECK (ID_SPECIMEN > 0),
	SPECIFIC_EPITHET VARCHAR(64),
	COMMON_NAME VARCHAR(64) NOT NULL,
	ID_TAXONOMY INT REFERENCES TAXONOMY (ID_TAXONOMY),
	ID_COLLECTOR INT REFERENCES AUTHOR_ROLE (ID_AURO),
	IDEN_COMMENT VARCHAR(2048),
	IDEN_DATE TIMESTAMP NOT NULL,
	ID_RETY INT REFERENCES REG_TYPE (ID_RETY),
	ID_SATY INT REFERENCES SAMPLE_TYPE (ID_SATY),
	ID_LOCATION INT REFERENCES LOCATION (ID_LOCATION),
	ID_DETERMINER INT REFERENCES AUTHOR_ROLE (ID_AURO),
	ID_BIOREG VARCHAR(32) NOT NULL,
	ID_CATALOG INT REFERENCES CATALOG (ID_CATALOG),
	COLLECT_DATE TIMESTAMP,
	COLLECT_COMMENT VARCHAR(2048),
	UNIQUE (ID_BIOREG)
);

CREATE TABLE SPECIMEN_CONTENT (
	ID_SPECCONT SERIAL NOT NULL PRIMARY KEY CHECK(ID_SPECCONT > 0),
	ID_SPECIMEN INT REFERENCES SPECIMEN (ID_SPECIMEN),
	FILE_NAME VARCHAR(128) NOT NULL,
	FILE_CONTENT BYTEA NOT NULL,
	SHORT_DESCRIPTION VARCHAR(512) NOT NULL,
	PUBLISH CHAR(1) NOT NULL DEFAULT 'N',
	FILE_UPLOAD_DATE TIMESTAMP NOT NULL DEFAULT NOW(),
	PUBLISH_DATE TIMESTAMP
);

CREATE TABLE MODULE (
	ID_MODULE SERIAL NOT NULL PRIMARY KEY CHECK (ID_MODULE > 0),
	MODULE_NAME VARCHAR(16) NOT NULL,
	MODULE_DESCR VARCHAR(256) NOT NULL
);

CREATE TABLE ROLE (
	ID_ROLE SERIAL NOT NULL PRIMARY KEY CHECK (ID_ROLE > 0),
	ROLE_NAME VARCHAR(16) NOT NULL,
	ROLE_DESCR VARCHAR(256) NOT NULL,
	ROLE_STATUS STATUS_ENUM,
	ROLE_CREATED TIMESTAMP,
	ROLE_MODIFIED TIMESTAMP,
	UNIQUE(ROLE_NAME)
);

CREATE TABLE ROLE_MODULE (
	ID_ROMO SERIAL NOT NULL PRIMARY KEY CHECK(ID_ROMO > 0),
	ID_ROLE INT REFERENCES ROLE (ID_ROLE),
	ID_MODULE INT REFERENCES MODULE (ID_MODULE),
        ROMO_LEVEL INT NOT NULL,
	UNIQUE (ID_ROLE, ID_MODULE)
);

CREATE TABLE "USER" (
	ID_USER SERIAL NOT NULL PRIMARY KEY CHECK (ID_USER > 0),
	USER_ID_NUMBER VARCHAR(32) NOT NULL,
	USER_NAMES VARCHAR(64) NOT NULL,
	USER_LASTNAMES VARCHAR(64) NOT NULL,
	USER_EMAIL VARCHAR(64) NOT NULL,
	USER_STATUS STATUS_ENUM,
	USER_CREATED TIMESTAMP,
	USER_MODIFIED TIMESTAMP,
	USER_LAST_LOGIN TIMESTAMP,
	USER_PASSWORD VARCHAR(64) NOT NULL,
	ID_ROLE INT REFERENCES ROLE (ID_ROLE),
	ID_INSTITUTION INT REFERENCES INSTITUTION (ID_INSTITUTION),
	UNIQUE(USER_ID_NUMBER)
);

CREATE TABLE ROLE_USER (
	ID_ROUS SERIAL NOT NULL PRIMARY KEY CHECK(ID_ROUS > 0),
	ID_ROLE INT REFERENCES ROLE (ID_ROLE),
	ID_USER INT REFERENCES "USER" (ID_USER),
	UNIQUE (ID_ROLE, ID_USER)
);

CREATE TABLE AUDIT_LOG (
	ID_AULOG SERIAL NOT NULL PRIMARY KEY CHECK (ID_AULOG > 0),
	ID_USER INT REFERENCES "USER" (ID_USER) NOT NULL,
	AULOG_TIME TIMESTAMP DEFAULT NOW(),
	AULOG_IP_ADDRESS VARCHAR2(16),
	AULOG_ACTION AUDIT_ENUM,
	AULOG_TARGET VARCHAR(16) NOT NULL
);